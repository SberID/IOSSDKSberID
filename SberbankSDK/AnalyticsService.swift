//
//  AnalyticsService.swift
//  SberbankSDK
//
//  Created by Roman Kuzin on 17.11.2020.
//  Copyright ¬© 2020 Sberbank. All rights reserved.
//

import UIKit
import MPAnalytics

protocol AnalyticsServiceProtocol {

	/// –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π EventTracker –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–µ–≥–æ
	var eventTracker: EventTracker { get }

	/// –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
	/// - Parameters:
	///   - eventType: —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è
	///   - properties: –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
	func sendEvent(_ eventType: AnalyticsEventType, by tracker: EventTracker, properties: [String: String])
}

/// –°–µ—Ä–≤–∏—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, –æ–±–µ—Ä—Ç–∫–∞ –Ω–∞–¥ MPAnalytics
final class AnalyticsService: AnalyticsServiceProtocol {

	/// –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π EventTracker –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–µ–≥–æ
	lazy var eventTracker: EventTracker = {
		let urlString = "https://sve.online.sberbank.ru/metrics/partners"
		let apiKey = "da8570065d949a8a3ee551b99f31f7774909575e702289b2743fab0aad0ffe41"
		let partnerName = Bundle.main.displayName

		// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
		let deviceConfiguration = DeviceConfiguration(profile: Profile())

		/// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ç–µ–≤–æ–≥–æ —Å–ª–æ—è –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ Sberlytics
		let networkService = AnalyticsNetworkService(apiKey: apiKey, url: urlString) { result in
			switch result {
			case .success(let httpResponse):
				print("\n‚úÖüëÅüì§ Send analytics status code: \(httpResponse.statusCode)\nFull network response:\n\(httpResponse)")
			case .failure(let error):
				print("\n‚ùåüëÅüì§ Send analytics error: \(error.localizedDescription)")
			}
		}

		// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Å—Ç–∞–Ω—Å –º–æ–¥—É–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
		let sberlytics: EventTracker = MPAnalytics(networkService: networkService,
												   deviceConfiguration: deviceConfiguration,
												   sberId: partnerName)
		return sberlytics
	}()

	/// –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
	/// - Parameters:
	///   - eventType: —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è
	///   - properties: –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
	func sendEvent(_ eventType: AnalyticsEventType, by tracker: EventTracker, properties: [String: String]) {

		let storable: Bool = false
		let params = [String: String]()
		let properties: [String: String] = properties

		tracker.sendEvent(eventName: eventType.rawValue,
						  params: params,
						  properties: properties,
						  storable: storable,
						  location: nil) { analyticsError in
			if let error = analyticsError {
				print("\n‚ùåüëÅüëÅ ERROR! Analytics data composition error: \(String(describing: error.localizedDescription))\n")
			}
		}
	}
}
